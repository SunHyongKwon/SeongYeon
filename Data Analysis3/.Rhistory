for (i in as.numeric(real_estate$new)) {
new2<-c(new2,range[i])
}
real_estate$new<-new2
real_estate$new<-as.factor(real_estate$new)
real_estate
write.csv(real_estate,'data/ml_siheungdong.csv',row.names = F)
length(unique(real_estate$new))
real_estate<-read.csv('data/real_estate_final_plus_academy_train_budongsan_noise_bus_park_cctv_apartment.csv')
sort(unique(real_estate$구))
real_estate<-subset(real_estate,real_estate$구 == '송파구')
real_estate<-real_estate[,c(4:10,12:14,23:31)]
unique(real_estate$아파트명)
unique(real_estate$동)
real_estate<-subset(real_estate,real_estate$동 == '풍납동')
height<-ceiling(length(unique(real_estate$아파트명))/3)
par(mfrow = c(height,3),
family = 'AppleGothic'
)
for (i in sort(unique(real_estate$아파트명))) {
apart<-subset(real_estate,real_estate$아파트명 == i)
hist(apart$보증금,
xlab = i,
main = '보증금범위'
)
cat(paste(i,':',range(apart$보증금)),'\n')
}
par(family = 'AppleGothic',
mfrow = c(4,5)
)
for (i in sort(unique(real_estate$아파트명))) {
apart<-subset(real_estate,real_estate$아파트명 == i)
for (j in sort(unique(apart$임대면적))) {
area_apart<-subset(apart,apart$임대면적 == j)
hist(area_apart$보증금,
xlab = paste(i,':',round(j/3.3058),'평'),
main = '보증금범위'
)
cat(paste(i,':',range(area_apart$보증금)),'\n')
}
}
library(stringr)
real_estate$계약월<-substr(real_estate$계약일, start = 5, stop = 6)
par(family = 'AppleGothic' )
for (i in sort(unique(real_estate$아파트명))) {
apart<-subset(real_estate,real_estate$아파트명 == i)
for (j in sort(unique(apart$임대면적))) {
area_apart<-subset(apart,apart$임대면적 == j)
for (k in sort(unique(area_apart$계약월))) {
month_area_apart<-subset(area_apart,area_apart$계약월 == k)
hist(month_area_apart$보증금,
xlab = paste(i,':',round(j/3.3058),'평',':',k,'월'),
main = '보증금범위'
)
cat(paste(i,round(j/3.3058),'평',k,'월',':',range(month_area_apart$보증금)),'\n')
}
}
}
real_estate$계약월<-as.numeric(real_estate$계약월)
real_estate$계약계절<-ifelse(real_estate$계약월 == 12 | real_estate$계약월 <= 3,
'겨울',
ifelse(real_estate$계약월 <= 5,
'봄',
ifelse(real_estate$계약월 <= 9,
'여름',
'가을'
)
)
)
par(family = 'AppleGothic')
for (i in sort(unique(real_estate$아파트명))) {
apart<-subset(real_estate,real_estate$아파트명 == i)
for (j in sort(unique(apart$임대면적))) {
area_apart<-subset(apart,apart$임대면적 == j)
for (k in sort(unique(area_apart$계약계절))) {
month_area_apart<-subset(area_apart,area_apart$계약계절 == k)
hist(month_area_apart$보증금,
xlab = paste(i,':',round(j/3.3058),'평',':',k),
main = '보증금범위'
)
cat(paste(i,round(j/3.3058),'평',k,':',range(month_area_apart$보증금)),'\n')
}
}
}
par(family = 'AppleGothic')
for (i in sort(unique(real_estate$아파트명))) {
apart<-subset(real_estate,real_estate$아파트명 == i)
for (j in sort(unique(apart$임대면적))) {
area_apart<-subset(apart,apart$임대면적 == j)
for (k in sort(unique(area_apart$계약계절))) {
month_area_apart<-subset(area_apart,area_apart$계약계절 == k)
for (l in sort(unique(month_area_apart$층))) {
floor_month_area_apart <- subset(area_apart,area_apart$층 == l)
hist(floor_month_area_apart$보증금,
xlab = paste(i,':',round(j/3.3058),'평',':',k,':',l,'층'),
main = '보증금범위'
)
cat(paste(i,round(j/3.3058),'평',k,l,'층',':',range(month_area_apart$보증금)),'\n')
}
}
}
}
real_estate<-real_estate[,c(6,7,8,9,21)]
real_estate
count <- 6
# 아파트명 one hot encoding
for (i in sort(unique(real_estate$아파트명))) {
real_estate<-cbind(real_estate,real_estate$아파트명 == i)
colnames(real_estate)[count]<-i
count = count + 1
}
# 계약계절 one hot encoding
for (i in sort(unique(real_estate$계약계절))) {
real_estate<-cbind(real_estate,real_estate$계약계절 == i)
colnames(real_estate)[count]<-i
count = count + 1
}
real_estate
real_estate
real_estate<-real_estate[,c(2:4,6:ncol(real_estate))]
for (i in 1:3) {
min<-min(real_estate[,i])
max<-max(real_estate[,i])
real_estate<-cbind(real_estate,scale(real_estate[,i],center= min,scale = max - min))
}
# 맨 앞이 target
colnames(real_estate)[ncol(real_estate)-2]<-'target'
# 나머지가 feature
colnames(real_estate)[c(ncol(real_estate)-1,ncol(real_estate))]<-paste('v',seq(1,13,1),sep = '')
test3<-real_estate[,4:ncol(real_estate)]
training.data<-test3[,-(ncol(real_estate)-2)]
library(factoextra)
library(ggplot2)
fviz_nbclust(training.data, kmeans, method = 'wss',k.max = 50)
real_estate$new<-kmeans(training.data, 13 ,nstart=25)$cluster
real_estate$new<-factor(real_estate$new,
labels = c("1st",'2nd','3rd','4th','5th','6th','7th','8th','9th','10th',
'11th','12th','13th'#,'14th','15th','16th','17th','18th','19th','20th',
#'21th'#,'22th','23th'#,'24th','25th','26th','27th','28th','29th','30th',
#'31th','32th','33th','34th'#,'35th','36th','37th','38th','39th','40th'
),
levels = 1:13
)
plot(real_estate$보증금~real_estate$new)
real_estate$new<-kmeans(training.data, 21 ,nstart=25)$cluster
real_estate$new<-factor(real_estate$new,
labels = c("1st",'2nd','3rd','4th','5th','6th','7th','8th','9th','10th',
'11th','12th','13th','14th','15th','16th','17th','18th','19th','20th',
'21th'#,'22th','23th'#,'24th','25th','26th','27th','28th','29th','30th',
#'31th','32th','33th','34th'#,'35th','36th','37th','38th','39th','40th'
),
levels = 1:21
)
plot(real_estate$보증금~real_estate$new)
real_estate$new<-kmeans(training.data, 26 ,nstart=25)$cluster
real_estate$new<-factor(real_estate$new,
labels = c("1st",'2nd','3rd','4th','5th','6th','7th','8th','9th','10th',
'11th','12th','13th','14th','15th','16th','17th','18th','19th','20th',
'21th','22th','23th','24th','25th','26th'#,'27th','28th','29th','30th',
#'31th','32th','33th','34th'#,'35th','36th','37th','38th','39th','40th'
),
levels = 1:26
)
plot(real_estate$보증금~real_estate$new)
real_estate$new<-kmeans(training.data, 31 ,nstart=25)$cluster
real_estate$new<-factor(real_estate$new,
labels = c("1st",'2nd','3rd','4th','5th','6th','7th','8th','9th','10th',
'11th','12th','13th','14th','15th','16th','17th','18th','19th','20th',
'21th','22th','23th','24th','25th','26th','27th','28th','29th','30th',
'31th'#,'32th','33th','34th'#,'35th','36th','37th','38th','39th','40th'
),
levels = 1:31
)
plot(real_estate$보증금~real_estate$new)
rownames(real_estate)<-c()
remove_row_num<-c()
for (i in sort(unique(real_estate$new))) {
remove<-subset(real_estate,real_estate$new == i)
stat<-boxplot(remove$보증금)$stats
remove<-subset(remove,
remove$보증금 > stat[5,1] + (stat[4,1] - stat[3,1]) |
remove$보증금 < stat[1,1] - (stat[3,1] - stat[2,1])
)
remove_row_num<-c(remove_row_num, rownames(remove))
}
remove_row_num<-as.numeric(remove_row_num)
real_estate<-real_estate[-remove_row_num,]
plot(real_estate$보증금~real_estate$new)
rownames(real_estate)<-c()
remove_row_num<-c()
for (i in sort(unique(real_estate$new))) {
remove<-subset(real_estate,real_estate$new == i)
stat<-boxplot(remove$보증금)$stats
remove<-subset(remove,
remove$보증금 > stat[5,1] + (stat[4,1] - stat[3,1]) |
remove$보증금 < stat[1,1] - (stat[3,1] - stat[2,1])
)
remove_row_num<-c(remove_row_num, rownames(remove))
}
remove_row_num<-as.numeric(remove_row_num)
real_estate<-real_estate[-remove_row_num,]
plot(real_estate$보증금~real_estate$new)
test<-real_estate[,c(2:(ncol(real_estate)-4),ncol(real_estate))]
test2<-real_estate[,c(4:(ncol(real_estate)-4),(ncol(real_estate)-2):(ncol(real_estate)-1),ncol(real_estate))]
mean(nnet_for(test,5))
mean(nnet_for(test2,5))
mean(rf_for(test,5))
mean(rf_for(test2,5))
mean(svm_for(test,5))
mean(svm_for(test2,5))
paste('층 :', range(real_estate$층))
paste('임대면적 :', range(real_estate$임대면적))
range<-c()
for (i in sort(unique(real_estate$new))) {
range<-c(range,(paste(
min(subset(real_estate,real_estate$new == i)$보증금),
'~',
max(subset(real_estate,real_estate$new == i)$보증금))))
}
new2<-c()
for (i in as.numeric(real_estate$new)) {
new2<-c(new2,range[i])
}
real_estate$new<-new2
real_estate$new<-as.factor(real_estate$new)
real_estate
write.csv(real_estate,'data/ml_poongnapdong.csv',row.names = F)
length(unique(real_estate$new))
test
real_estate<-read.csv('data/ml_dorimdong.csv')
test
real_estate
real_estate<-read.csv('data/ml_dorimdong.csv')
library(nnet)
test<-real_estate[,c(4:10,12:14)]
model <- nnet(new ~ . , data = test , size = 10)
real_estate<-read.csv('data/ml_dorimdong.csv')
library(nnet)
test$new<-as.factor(test$new)
test
test<-real_estate[,c(4:10,12:14)]
model <- nnet(new ~ . , data = test , size = 10)
library(nnet)
test<-real_estate[,c(4:10,12:14)]
test$new<-as.factor(test$new)
test
model <- nnet(new ~ . , data = test , size = 10)
saveRDS(model , "./data/ml_dorimdong.rds")
real_estate<-read.csv('data/ml_dorimdong.csv')
real_estate<-read.csv('data/ml_ohguemdong.csv')
library(randomForest)
real_estate
real_estate
real_estate<-read.csv('data/ml_ohguemdong.csv')
library(randomForest)
test<-real_estate[,c(2:10,14)]
test$new<-as.factor(test$new)
test
model <- rf(new ~ . , data = test , ntree = 100)
library(randomForest)
test<-real_estate[,c(2:10,14)]
test$new<-as.factor(test$new)
test
model <- randomForest(new ~ . , data = test , ntree = 100)
saveRDS(model , "./data/ml_ohguemdong.rds")
real_estate<-read.csv('data/ml_singeongdong.csv')
real_estate
library(randomForest)
test<-real_estate[,c(2:12,16)]
test$new<-as.factor(test$new)
test
model <- randomForest(new ~ . , data = test , ntree = 100)
saveRDS(model , "./data/ml_singeongdong.rds")
real_estate<-read.csv('data/ml_sincheondong.csv')
real_estate
real_estate<-read.csv('data/ml_sincheondong.csv')
library(randomForest)
test<-real_estate[,c(2:10,14)]
test$new<-as.factor(test$new)
test
model <- randomForest(new ~ . , data = test , ntree = 100)
saveRDS(model , "./data/ml_sincheondong.rds")
real_estate<-read.csv('data/ml_garakdong.csv')
real_estate
library(randomForest)
test<-real_estate[,c(2:10,14)]
test$new<-as.factor(test$new)
test
model <- randomForest(new ~ . , data = test , ntree = 100)
saveRDS(model , "./data/ml_garakdong.rds")
real_estate<-read.csv('data/ml_siheungdong.csv')
real_estate
real_estate
library(nnet)
test<-real_estate[,c(4:12,14:16)]
test$new<-as.factor(test$new)
test
model <- nnet(new ~ . , data = test , size = 10)
saveRDS(model , "./data/ml_siheungdong.rds")
real_estate<-read.csv('data/ml_poongnapdong.csv')
real_estate
library(randomForest)
test<-real_estate[,c(4:10,12:14)]
test$new<-as.factor(test$new)
test
model <- randomForest(new ~ . , data = test , ntree = 100)
saveRDS(model , "./data/ml_poongnapdong.rds")
real_estate<-read.csv('data/ml_gwangjangdong.csv')
test<-real_estate[,c(4:12,14:16)]
library(nnet)
test$new<-as.factor(test$new)
test
model <- nnet(new ~ . , data = test , size = 10)
saveRDS(model , "./data/ml_gwangjangdong.rds")
real_estate<-read.csv('data/ml_dorimdong.csv')
library(nnet)
test<-real_estate[,c(4:10,12:14)]
test$new<-as.factor(test$new)
test
model <- nnet(new ~ . , data = test , size = 10)
saveRDS(model , "./data/ml_dorimdong.rds")
real_estate<-read.csv('data/ml_ohguemdong.csv')
library(randomForest)
test<-real_estate[,c(2:10,14)]
test$new<-as.factor(test$new)
test
model <- randomForest(new ~ . , data = test , ntree = 100)
saveRDS(model , "./data/ml_ohguemdong.rds")
real_estate<-read.csv('data/ml_singeongdong.csv')
library(randomForest)
test<-real_estate[,c(2:12,16)]
test$new<-as.factor(test$new)
test
model <- randomForest(new ~ . , data = test , ntree = 100)
saveRDS(model , "./data/ml_singeongdong.rds")
real_estate<-read.csv('data/ml_sincheondong.csv')
library(randomForest)
test<-real_estate[,c(2:10,14)]
test$new<-as.factor(test$new)
test
model <- randomForest(new ~ . , data = test , ntree = 100)
saveRDS(model , "./data/ml_sincheondong.rds")
real_estate<-read.csv('data/ml_sincheondong.csv')
library(randomForest)
test<-real_estate[,c(2:10,14)]
test$new<-as.factor(test$new)
test
model <- randomForest(new ~ . , data = test , ntree = 100)
saveRDS(model , "./data/ml_sincheondong.rds")
real_estate<-read.csv('data/ml_garakdong.csv')
library(randomForest)
test<-real_estate[,c(2:10,14)]
test$new<-as.factor(test$new)
test
model <- randomForest(new ~ . , data = test , ntree = 100)
saveRDS(model , "./data/ml_garakdong.rds")
real_estate<-read.csv('data/ml_siheungdong.csv')
real_estate
library(nnet)
test<-real_estate[,c(4:12,14:16)]
test$new<-as.factor(test$new)
test
model <- nnet(new ~ . , data = test , size = 10)
saveRDS(model , "./data/ml_siheungdong.rds")
real_estate<-read.csv('data/ml_poongnapdong.csv')
library(randomForest)
test<-real_estate[,c(4:10,12:14)]
test$new<-as.factor(test$new)
test
model <- randomForest(new ~ . , data = test , ntree = 100)
saveRDS(model , "./data/ml_poongnapdong.rds")
test
real_estate<-read.csv('data/ml_garakdong.csv')
library(randomForest)
test<-real_estate[,c(2:10,14)]
test$new<-as.factor(test$new)
test
model <- randomForest(new ~ . , data = test , ntree = 100)
saveRDS(model , "./data/ml_garakdong.rds")
real_estate<-read.csv('data/ml_garakdong.csv')
real_estate
install.packages('Rserve')
library(Rserve)
Rserve(FALSE, port = 6311, args = '--RS-encoding utf8 --no-save')
library(Rserve)
Rserve(FALSE, port = 6311, args = '--RS-encoding utf8 --no-save')
library(Rserve)
Rserve(FALSE, port = 6311, args = '--RS-encoding utf8 --no-save')
library(Rserve)
Rserve(FALSE, port = 6311, args = '--RS-encoding utf8 --no-save')
library(Rserve)
Rserve(FALSE, port = 6311, args = '--RS-encoding utf8 --no-save')
library(Rserve)
Rserve(FALSE, port = 6311, args = '--RS-encoding utf8 --no-save')
Rserve(FALSE, port = 6311, args = '--RS-encoding utf8 --no-save')
library(Rserve)
Rserve(FALSE, port = 6311, args = '--RS-encoding utf8 --no-save')
setwd("~/Desktop/Project/6.GoRice/Data Analysis3")
data<-read.csv("./Data/sangkwon+shop+attract+worker+pop+apart+ratio.csv")
head(data)
data<-read.csv("./Data/sangkwon+shop+attract+worker+pop+apart+ratio.csv")
head(data)
columns(data)
column(data)
colnames(data)
lm(data$분기당_매출_금액~data[,8:112])
data[,8:112]
lm(data$분기당_매출_금액~data[8:112])
lm(data$분기당_매출_금액~data[,8:112])
lm(data[,8:112]~data$분기당_매출_금액)
x <- data[,8:112]
y <- data$분기당_매출_금액
lm(y~x)
x <- data[,8:112]
y <- data$분기당_매출_금액
lm(y~unlist(x))
x <- data[,8:112]
y <- data$분기당_매출_금액
lm(y~unlist(x),drop.unused.levels = False)
x <- data[,8:112]
y <- data$분기당_매출_금액
lm(y~unlist(x),drop.unused.levels = FALSE)
nrows(x)
ncols(x)
x
nrows(x)
nrow(x)
nrow(y)
x <- data[,8:112]
y <- data[,7]
lm(y~unlist(x),drop.unused.levels = FALSE)
x <- data[,8:112]
y <- data[,7]
lm(y~unlist(x))
nrow(x)
nrow(y)
ncol(y)
y
len(y)
data <- data[,7:112]
lm('분기당_매출_금액' ~ .,data = data)
data <- data[,7:112]
data<-read.csv("./Data/sangkwon+shop+attract+worker+pop+apart+ratio.csv")
head(data)
colnames(data)
data <- data[,7:112]
lm(data$분기당_매출_금액 ~ .,data = data)
summary(lm(data$분기당_매출_금액 ~ .,data = data))
data<-read.csv("./Data/sangkwon+shop+attract+worker+pop+apart+ratio.csv")
head(data)
colnames(data)
data_temp <- data[,7:112]
lm(data_temp$분기당_매출_금액 ~ .,data = data_temp)
summary(lm(data_temp$분기당_매출_금액 ~ .,data = data_temp))
len(y)
str(data)
# 회귀 분석 모델에 필요있는 컬럼을 줄여준다.
reduced <- step(lm(data_temp$분기당_매출_금액 ~ .,data = data_temp) , direction = "backward")
# 예측력이 올라가도록 설정된 모델의 새로운 회귀 분석 모델 보기
summary(reduced)
data
colnames(data)
x1 <- data[,7:31]
x2 <- data[,c(7,32:52)]
x3 <- data[,c(7,53:74)]
x4 <- data[,c(7,75:89)]
x5 <- data[,c(7,90:112)]
data<-read.csv("./Data/sangkwon+shop+attract+worker+pop+apart+ratio.csv")
head(data)
colnames(data)
data_temp <- data[,7:112]
lm(data_temp$분기당_매출_금액 ~ .,data = data_temp)
summary(lm(data_temp$분기당_매출_금액 ~ .,data = data_temp))
# 회귀 분석 모델에 필요있는 컬럼을 줄여준다.
reduced <- step(lm(data_temp$분기당_매출_금액 ~ .,data = data_temp) , direction = "backward")
data<-read.csv("./Data/sangkwon+shop+attract+worker+pop+apart+ratio.csv")
head(data)
colnames(data)
data_temp <- data[,7:112]
lm(data_temp$분기당_매출_금액 ~ .,data = data_temp)
summary(lm(data_temp$분기당_매출_금액 ~ .,data = data_temp))
colnames(data)
# 8 - 31
# 32 - 52
# 53 - 74
# 75 - 89
# 90 - 112
x1 <- data[,7:31]
x2 <- data[,c(7,32:52)]
x3 <- data[,c(7,53:74)]
x4 <- data[,c(7,75:89)]
x5 <- data[,c(7,90:112)]
# 회귀 분석 모델에 필요있는 컬럼을 줄여준다.
reduced <- step(lm(x1$분기당_매출_금액 ~ .,data = x1) , direction = "backward")
# 예측력이 올라가도록 설정된 모델의 새로운 회귀 분석 모델 보기
summary(reduced)
# 회귀 분석 모델에 필요있는 컬럼을 줄여준다.
reduced <- step(lm(x2$분기당_매출_금액 ~ .,data = x2) , direction = "backward")
# 예측력이 올라가도록 설정된 모델의 새로운 회귀 분석 모델 보기
summary(reduced)
# 회귀 분석 모델에 필요있는 컬럼을 줄여준다.
reduced <- step(lm(x3$분기당_매출_금액 ~ .,data = x3) , direction = "backward")
# 예측력이 올라가도록 설정된 모델의 새로운 회귀 분석 모델 보기
summary(reduced)
# 회귀 분석 모델에 필요있는 컬럼을 줄여준다.
reduced <- step(lm(x4$분기당_매출_금액 ~ .,data = x4) , direction = "backward")
# 예측력이 올라가도록 설정된 모델의 새로운 회귀 분석 모델 보기
summary(reduced)
# 회귀 분석 모델에 필요있는 컬럼을 줄여준다.
reduced <- step(lm(x5$분기당_매출_금액 ~ .,data = x5) , direction = "backward")
# 예측력이 올라가도록 설정된 모델의 새로운 회귀 분석 모델 보기
summary(reduced)
